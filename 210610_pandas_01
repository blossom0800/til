## TIL - Pandas #2

(by 러닝스푼즈 나노디그리 과정 / 박조은 강사님)

 - 데이터프레임 vs. 시리즈
   . 시리즈는 인덱스 형태의 단일 데이터만 담을 수 있음 (행or열 하나), 대괄호 []
   . 데이터프레임은 여러 개의 Series가 모여있는 형태 (여러 행렬이 있는 표의 형태), 대괄호 [[]]
   
 - 시리즈 타입에 컬럼 추가하기
 - 데이터의 type을 출력해볼 수 있음. 이 때 한 개의 컬럼이라도 []를 덧씌워주면 데이터프레임이 됨.
 - 컬럼을 리스트의 형태로 변경하기
 - 컬럼값 변경하기, 이 때 숫자 중 np.nan(float type)이 있으면 나머지가 int이더라도 소수점이 발생함.
   * nan = not a number의 약자로 결측치를 의미함 / nan의 데이터 타입은 float임
 - 기존 데이터프레임에 컬럼을 추가&삭제해보기, 이 때 코딩한 결과값은 구문이 아닌 메모리에 저장되어 있음을 기억하기
 
 - 데이터 요약하기: 데이터프레임.info()
 - 데이터 크기 출력하기: 데이터프레임.shape
 - 데이터 타입 조회하기: 데이터프레임.dtypes - 컬럼별 속성 조회
 - 데이터 요약정보 조회하기: 데이터프레임.describe() - count, mean, std, min, 4분위값 요약
 
 - 컬럼명으로 데이터 가져오기: 데이터프레임["컬럼명"], 이 때 2개 이상을 가져오려면 데이터프레임[["A", "B"]] << 이렇게 인덱스를 []로 묶어야 함
 - 행을 기준으로 데이터 가져오기: loc = locate, 데이터프레임.loc[가져올 행 번호 - 다중으로도 조회 가능함]
 - 행과 열을 함께 가져오기: 위와 동일하지만(>> df.loc[행, 열]) 행이든 열이든 2개 이상이면 []로 묶어줌
 
 - 파이썬의 정규 표현식에서 |는 or를, &는 and를 의미함
 - 대소문자/한영 혼용으로 인해 검색이 되지 않는 문제를 해결하기 위해 파생변수 만들기 >>
 - 조건 걸기
    . e.g.) 데이터프레임["컬럼명"] = 조건비교값 >> T/F로 출력됨
    . e.g.) 데이터프레임[데이터프레임["컬럼명"] = 조건비교값] >> 그 조건에 맞는 데이터프레임이 출력됨 (boolean indexing)
 
 - 정렬하기: 데이터프레임.sort_values(by=~, ascending=~)
 
 - 파일로 저장하기
     . 데이터프레임.to_csv
 
 
